#!/bin/csh -f
#
# proc_2_vfr
# extracts VPR and VFR records from navest
# SOLN_DEADRECK, SOLN_GPS0, SOLN_USL are processed individually.
# Other VFR records, which perhaps dont exist, go into another file.
# SJM Dec 2014 from proc_1_dep
#
# Usage: proc_2_vfr  <indir>  <lowering> <cruise> <vehicle> 
#          where indir   -  directory for processed data--base name
#	   where lowering    - lowering id, eg j2-002
#	   where cruise  - cruise id, eg altv7l20 
#	   where veh  	 - vehicle id, eg j2 or argo or dsl120 
#
#
# Check usage
#
if ( $#argv < 3 ) then
 echo "Usage: $0   <indir>  <lowering> <cruise> <vehicle> "
 echo "      where indir   - base  directory for organized data"
 echo "	           lowering  - name of lowering, eg jJ2002"
 echo "	           cruise   - cruise name, eg atlv7l20"
 echo "	     "      
 echo "	     "
 exit 1
endif

set indir         = "$1" 
set lowering      = "$2" 
set cruise_name   = "$3" 


set real_indir = $indir/$cruise_name/$lowering/navest/
set real_outdir = $indir/$cruise_name/$lowering

set bindir = ~/bin

# Check a few things
if (!( -d $real_indir && -r $real_indir)) then
	echo "In dir Does Not Exist or is not readable: $real_indir"
	exit 2
endif
if (!( -d $real_outdir && \
       -w $real_outdir)) then
	echo "Out directory Does Not Exist or is not writable: $real_outdir"
	exit 2
endif

# initialize processing summary
echo "    Cruise: $cruise_name"
echo "    Processing navest VPR and VFR data for $lowering" 
echo "    Input Directory: $real_indir"
echo "    Output Directory: $real_outdir"
echo "    Written: "`/bin/date "+ %b %e %T %Z"`
echo " "
echo "*********************************************************"

# if we get interrupted, exit gracefully
onintr QUIT_SCRIPT

###################### VPR Records ###########################
  # process the dead reckoned VFR records
  set vprfile = $real_outdir/$lowering.VPR.raw
  # extract the files from the navest logs
  cd $real_indir
  foreach f(*.DAT)
    set basen = $f:r
    if (-M $f > -M $outdir/$cruise/$subdir/$basen.vpr ||
        ! -e $outdir/$cruise/$subdir/$basen.vpr) then
	   echo "Processing $f for VPR records"
           grep -h VPR $f > $basen.vpr
    else
       echo "No new VPR to parse"
    endif
  end

  foreach f(`ls -1 $real_indir/*.vpr|sort`)
     checkTimes.pl <$f  >> $vprfile
     echo `/bin/date "+ %b %e %T %Z"` " checked for bad times in $f"
  end
  echo "Saved results in $vprfile"

###################### VFR Records ###########################
  # process the dead reckoned VFR records
  set deadreckfile = $real_outdir/$lowering.VFR_DR.raw
  # extract the files from the navest logs
  cd $real_indir
  foreach f(*.DAT)
    set basen = $f:r
    if (-M $f > -M $outdir/$cruise/$subdir/$basen.vfr_dr ||
        ! -e $outdir/$cruise/$subdir/$basen.vfr_dr) then
	   echo "Processing $f for SOLN_DEADRECK"
           grep -h VFR $f | grep SOLN_DEADRECK > $basen.vfr_dr
    else
       echo "No new VFR:SOLN_DEADRECK to parse"
    endif
  end

  foreach f(`ls -1 $real_indir/*.vfr_dr|sort`)
     checkTimes.pl <$f  >> $usblfile
     echo `/bin/date "+ %b %e %T %Z"` " checked for bad times in $f"
  end
  echo "Saved results in $deadreckfile"
 
  foreach f(*.DAT)
    set basen = $f:r
    if (-M $f > -M $outdir/$cruise/$subdir/$basen.vfr_usbl ||
        ! -e $outdir/$cruise/$subdir/$basen.vfr_usbl) then
	   echo "Processing $f for SOLN_USBL"
           grep -h VFR $f | grep SOLN_USBL > $basen.vfr_usbl
    else
       echo "No new VFR:SOLN_USBL to parse"
    endif
  end
  
  # process the VFR USBL records
  set usblfile = $real_outdir/$lowering.VFR_USBL.raw
   
  foreach f(`ls -1 $real_indir/*VFR_USBL*|sort`)   
     checkTimes.pl <$f  >> $deadreckfile
     echo `/bin/date "+ %b %e %T %Z"` " checked for bad times in $f"
  end
  echo "saved results in $usblfile"

  # process the VFR GPS records
  set gps0file = $real_outdir/$lowering.VFR_GPS0.raw

  foreach f(*.DAT)
    set basen = $f:r
    if (-M $f > -M $outdir/$cruise/$subdir/$basen.vfr_gps0 ||
        ! -e $outdir/$cruise/$subdir/$basen.vfr_gps0) then
	   echo "Processing $f for SOLN_GPS0"
           grep -h VFR $f | grep SOLN_GPS0 > $basen.vfr_gps0
    else
       echo "No new VFR:SOLN_GPS0 to parse"
    endif
  end
   
  foreach f(`ls -1 $real_indir/*.vfr_gps0|sort`)
     
     checkTimes.pl <$f  >> $gps0file
     echo `/bin/date "+ %b %e %T %Z"` " checked for bad times in $f"
  end
  echo "saved results in $gps0file"

  # process the VFR data that isnt DR, GPS, or USBL
  set vfrfile = $real_outdir/$lowering.VFR_O.raw

  foreach f(*.DAT)
    set basen = $f:r
    if (-M $f > -M $outdir/$cruise/$subdir/$basen.vfr_O ||
        ! -e $outdir/$cruise/$subdir/$basen.vfr_O) then
	   echo "Processing $f for other VFRs"
           grep -h VFR $f | grep -v SOLN_USBL | grep -v SOLN_GPS0 | grep -v SOLN_DEADRECK > $basen.vfr_O
    else
       echo "No new VFR:SOLN_O to parse"
    endif
  end
   
  foreach f(`ls -1 $real_indir/*.vfr_O|sort`)
     
     checkTimes.pl <$f  >> $vfrfile
     echo `/bin/date "+ %b %e %T %Z"` " checked for bad times in $f"
  end
  echo "saved results in $gps0file"

goto DONE


QUIT_SCRIPT:
  echo ""
  echo "$0 was interrupted... "
 exit 1

DONE:
  echo ""
  echo ""
  echo `date "+ %b %e %T %Z"` "Phase 1 VFR Processing  Done for $lowering "
  echo ""
  echo ""
exit 1

